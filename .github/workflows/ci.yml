name: CI - Build, Test, Coverage & Lint

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore Core.PosTech8Nett/src/Core.PosTech8Nett.Api/Core.PosTech8Nett.Api.csproj

      - name: Lint check with dotnet format
        run: dotnet format --verify-no-changes --severity warn --verbosity diag

      - name: Build solution
        run: dotnet build Core.PosTech8Nett/src/Core.PosTech8Nett.Api/Core.PosTech8Nett.Api.csproj --configuration Release --no-restore

      - name: Run tests with code coverage
        run: |
          dotnet test tests/Core.PosTech8Nett.Test/Core.PosTech8Nett.Test.csproj \
            --no-build --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory ./TestResults

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./TestResults/**/coverage.cobertura.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      # - name: Notify Slack (descomente e configure o webhook)
      #   uses: slackapi/slack-github-action@v1.24.0
      #   with:
      #     payload: |
      #       {
      #         "text": "âœ… CI finalizado com sucesso para o projeto Fiap!"
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
