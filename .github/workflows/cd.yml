name: CD - Deploy to Azure App Service

on:
  push:
    branches:
      - main

jobs:
  build-publish-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repositÃ³rio
        uses: actions/checkout@v4

      - name: Instalar .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar pacotes
        run: dotnet restore Core.PosTech8Nett/src/Core.PosTech8Nett.Api/Core.PosTech8Nett.Api.csproj

      - name: Compilar projeto
        run: dotnet build Core.PosTech8Nett/src/Core.PosTech8Nett.Api/Core.PosTech8Nett.Api.csproj --configuration Release --no-restore

      - name: Publicar projeto
        run: dotnet publish Core.PosTech8Nett/src/Core.PosTech8Nett.Api/Core.PosTech8Nett.Api.csproj -c Release -o ${{ github.workspace }}/publish
      
      - name: Instalar dotnet-ef CLI
        run: dotnet tool install --global dotnet-ef

      - name: Adicionar ferramentas globais ao PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Aplicar scripts de migraÃ§Ã£o
        run: dotnet ef database update --project Core.PosTech8Nett/src/Core.PosTech8Nett.Api/Core.PosTech8Nett.Api.csproj
        env:
          ConnectionStrings__DefaultConnection: 

      - name: Implantar aplicativo no azure
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Fiap'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ github.workspace }}/publish

      # - name: Notify Slack after deploy (descomente e configure o webhook)
      #   uses: slackapi/slack-github-action@v1.24.0
      #   with:
      #     payload: |
      #       {
      #         "text": "ðŸš€ Deploy concluÃ­do no Azure App Service: Fiap!"
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
